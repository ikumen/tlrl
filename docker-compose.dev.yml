# Docker compose for development that provides all the production services
# to our local environment.
---
version: '3.7'
networks:
  app-tier:
    driver: bridge

services:
  solr:
    image: solr:8.5.1
    container_name: solr
    restart: "no"
    volumes:
      - "./target/solr:/var/solr"
    ports:
      - "8983:8983"
    networks:
      - app-tier

  zookeeper:
    image: bitnami/zookeeper:3
    container_name: zookeeper
    ports:
      - '2181:2181'
    volumes:
      - './target/zookeeper:/bitnami/zookeeper'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-tier

  kafka:
    image: bitnami/kafka:2
    container_name: kafka
    volumes:
      - './target/kafka:/bitnami/kafka'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    ports:
      - '9092:9092'
      - '9093:9093'
    depends_on:
      - 'zookeeper'
    networks:
      - app-tier

  postgres:
    image: postgres:12.3-alpine
    container_name: postgres
    restart: "no"
    environment:
      - DB_NAME=${DB_NAME:-tlrldb}
      - DB_ADMIN=${DB_ADMIN:-tlrladmin}
      - DB_USER=${DB_USER:-tlrluser}
      - DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD:-tlrladmin}
      - DB_USER_PASSWORD=${DB_USER_PASSWORD:-tlrluser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - "./backend/db/schema:/docker-entrypoint-initdb.d"
      - "./target/postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - app-tier
      
  fetcher:
    build: 
      context: ./fetcher
    image: fetcher
    container_name: fetcher
    environment:
      - FETCHER_LOG_LVL=${FETCHER_LOG_LVL:-4}
      - FETCHER_KAFKA_BROKERS=${FETCHER_KAFKA_BROKERS:-kafka:9092}
      - FETCHER_SOLR_SERVER=${FETCHER_SOLR_SERVER:-solr:8983}
    volumes:
      - "${FETCHER_HOST_ARCHIVE_DIR:-./target/fetcher/archive}:/data/fetcher"
    depends_on:
      - 'kafka'
    networks:
      - app-tier
      