# Default profile responsible for setting properties common across
# all environments.
spring:
  profiles:
    include:
      - local
  # Profile pull from Maven profile property during the build process.
  # It's tied to a specific Maven profile that is responsible for loading
  # the target database dependencies.
  #- @database.profile@
  datasource:
    # Normally we want to connect as a database user, not admin
    username: ${DB_USER_NAME:tlrluser}
    password: ${DB_USER_PASSWORD:tlrluser}
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 
            client-secret: 
          github:
            client-id: 
            client-secret: 

app:
  kafka:
    groupId: tlrl
    bootstrap-servers: ${KAFKA_BROKERS:localhost:9093}
  solr:
    baseUrls:
      - http://${SOLR_SERVER:localhost:8983}/solr/tlrl
  events:
    bookmark:
      archived: bookmark.archived
      created: bookmark.created
      deleted: bookmark.deleted
      indexed: bookmark.indexed
      updated: bookmark.updated

logging:
  level:
    org:
      springframework: INFO
      hibernate: ERROR
    com.gnoht.tlrl: DEBUG

---
#
# Development specific profile
#
spring:
  profiles: dev
  datasource:
    # In development, we need to have hibernate auto-generate the DDL so
    # we connect as an admin `tlrladmin`, giving us full control of the
    # database.
    username: ${DB_ADMIN_NAME:tlrladmin}
    password: ${DB_ADMIN_PASSWORD:tlrladmin}
    continue-on-error: true
  jpa:
    show-sql: true

---
#
# Production specific profile
#
spring:
  profiles: prod
  datasource:
    # In production, the app only needs to read/write/delete from (e.g, schema usage),
    # therefore will connect with `tlrluser`.
    username: ${DB_USER_NAME:?}
    password: ${DB_USER_PASSWORD:?}
  jpa:
    show-sql: false

logging:
  level:
    org:
      springframework: WARN
      hibernate: ERROR
    com.gnoht.tlrl: WARN
---
#
# Profile responsible for setting the H2 specific JDBC/JPA properties.
# This should ONLY be run in conjunction with "dev"
#
spring:
  profiles: h2
  datasource:
    url: jdbc:h2:file:./target/h2/${DB_NAME:tlrldb};MODE=PostgreSQL
    driverClassName: org.h2.Driver
    platform: h2-dev
  jpa:
    hibernate:
      'ddl-auto': ${DB_DDL_AUTO:update}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2-console

---
#
# Profile is responsible for setting the PostgreSQL specific JDBC/JPA
# properties. It's possible to run this profile in any of the environments
# (e.g, dev, test, production).
#
spring:
  profiles: postgres
  datasource:
    url: jdbc:postgresql://${DB_SERVER_HOSTNAME:localhost}:${DB_SERVER_PORT:5432}/${DB_NAME:tlrldb}
    driverClassName: org.postgresql.Driver
  jpa:
    hibernate:
      'ddl-auto': ${DB_DDL_AUTO:none}
      default_schema: public
    properties:
      hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
