version: '3.7'
# Main compose file that builds all of the "required" services for a base
# image that works out of box for our project.
#
# Note: we don't explicitly specify networks here and will let the services
# join the default network. This works fine when running locally for
# development/test/staging, as we don't need to be on the same network. For
# production, we use multiple compose files (see https://docs.docker.com/compose/extends/#multiple-compose-files)
# to join the default network that was created by our upstream nginx reverse proxy.
#
services:
  # -----
  # The database for our application
  # -----
  tlrl-db:
    build: db
    image: tlrl-db:latest
    container_name: tlrl-db
    restart: "no"
    environment:
      - DB_NAME
      - DB_ADMIN_NAME
      - DB_USER_NAME
      - DB_DATA_VOLUME
      - DB_SERVER_PORT
      - DB_USER_PASSWORD=${DB_USER_PASSWORD:?}
      - POSTGRES_USER=${DB_ADMIN_NAME}
      - POSTGRES_PASSWORD=${DB_ADMIN_PASSWORD:?}
      # The PostgreSQL Docker image (https://hub.docker.com/_/postgres) always
      # creates a `postgres` database regardless of our config. Let's just make
      # it more explicit here, and note that we shouldn't change this value. In
      # the initdb scripts, we lock this database down and basically don't use it.
      - POSTGRES_DB=postgres
    volumes:
      - "${DB_DATA_VOLUME}:/var/lib/postgresql/data"
    ports:
      - "${DB_SERVER_PORT}:5432"

  # ----
  # Our main api/web application. When running without the tlrl-db service
  # it will rely on an embedded H2 database.
  # ----
  tlrl-app:
    build:
      context: .
      args:
        - TARGET_DB=${TARGET_DB:-h2}
        - SKIP_TESTS=${SKIP_TESTS:-true}
    image: tlrl-app:latest
    container_name: tlrl-app
    restart: "no"
    environment:
      - ACTIVE_PROFILES
      # Defaults to tlrl-db, as we are most likely running this with that service.
      # And if we were running embedded H2, then it's fine, as with H2 we specify
      # the file path, to write to, not host to connect to.
      - DB_SERVER_HOSTNAME
    ports:
      - "${TLRL_SERVER_PORT}:8080"
